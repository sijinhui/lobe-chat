name: Publish Database Docker Image
permissions:
  contents: read

on:
  push:
    branches:
      - main
    paths-ignore:
      - '.github'
  workflow_dispatch:
  release:
    types: [published]

concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  REGISTRY_IMAGE: registry.cn-hangzhou.aliyuncs.com/sijinhui/lobe-chat-database

jobs:
  push_to_registry:
    name: Push Docker image (${{ matrix.env_name }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - env_name: 'Production'
            secret_env: ${{ secrets.DOCKER_ENV }}
            tag_suffix: |
              type=raw,value=${{ env.DATE_TAG }}
              type=raw,value=latest
              type=ref,event=tag
          - env_name: 'Test'
            secret_env: ${{ secrets.DOCKER_ENV_TEST }}
            tag_suffix: |
              type=raw,value=test
              type=ref,event=tag

    steps:
      - name: Check out the repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare environment
        run: |
          echo "${{ matrix.secret_env }}" > .env

      - name: Get current date
        if: matrix.env_name == 'Production'
        run: echo "DATE_TAG=$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: ${{ matrix.tag_suffix }}

      - name: Docker login
        uses: docker/login-action@v3
        with:
          registry: registry.cn-hangzhou.aliyuncs.com
          username: ${{ secrets.ALY_HUB_USERNAME }}
          password: ${{ secrets.ALY_HUB_PASSWORD }}

      - name: Get commit SHA
        if: github.ref == 'refs/heads/main'
        id: vars
        run: echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Build and export
        id: build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64
          context: .
          file: ./Dockerfile.database
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SHA=${{ steps.vars.outputs.sha_short }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push=true
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false

  trigger_to_deploy:
    # 保持原有配置，但需要确保只在生产环境触发
    needs: [push_to_registry]
    if: github.event_name == 'release' && contains(needs.push_to_registry.matrix.env_name, 'Production')
    steps:
      - name: Trigger Another Workflow on Success
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh workflow run deploy-to-production.yml --repo sijinhui/lobe-chat --ref main
